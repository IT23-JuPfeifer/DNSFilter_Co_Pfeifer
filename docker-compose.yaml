services:
  # Pi-hole Instanz 1
  pihole1:
    container_name: pihole1  # Name des Containers
    image: pihole/pihole:latest  # Aktuelles Pi-hole Image
    networks:
      dns_network:
        ipv4_address: 10.0.1.2  # Feste IP-Adresse innerhalb des benutzerdefinierten Netzwerks
    ports:
      - "8081:80"  # Pi-hole Admin-Interface ist über Port 8081 erreichbar
    environment:
      WEBPASSWORD: "Passwort123!"  # Passwort für das Admin-Interface
    volumes:
      - "./pihole/pihole/etc/pihole/:/etc/pihole/"  # Persistenz für Pi-hole Daten
      - "./pihole/pihole/etc/dnsmasq.d/:/etc/dnsmasq.d/"  # Persistenz für DNSMasq-Konfiguration
    restart: unless-stopped  # Neustart des Containers bei Fehlern

  # Pi-hole Instanz 2
  pihole2:
    container_name: pihole2  # Name des Containers
    image: pihole/pihole:latest  # Aktuelles Pi-hole Image
    networks:
      dns_network:
        ipv4_address: 10.0.1.3  # Feste IP-Adresse für zweite Instanz
    ports:
      - "8082:80"  # Admin-Interface ist über Port 8082 erreichbar
    environment:
      WEBPASSWORD: "Passwort123!"  # Passwort für das Admin-Interface (identisch mit pihole1)
    volumes:
      - "./pihole/pihole/etc/pihole/:/etc/pihole/"  # Gemeinsame Persistenz mit pihole1
      - "./pihole/pihole/etc/dnsmasq.d/:/etc/dnsmasq.d/"  # Gemeinsame Persistenz mit pihole1
    restart: unless-stopped  # Neustart des Containers bei Fehlern

  # DNSDist als Load Balancer zwischen den Pi-hole Instanzen
  dnsdist:
    container_name: dnsdist  # Name des Containers
    image: powerdns/dnsdist-master:latest  # Aktuelles DNSDist Image
    networks:
      dns_network:
        ipv4_address: 10.0.1.4  # Feste IP-Adresse für DNSDist
    ports:
      - "53:53/tcp"  # DNS-Weiterleitung über TCP
      - "53:53/udp"  # DNS-Weiterleitung über UDP
      - "8083:8083"  # DNSDist Web-Interface
    volumes:
      - "./dnsdist/dnsdist.conf:/etc/dnsdist/dnsdist.conf"  # Persistente Konfiguration für DNSDist
    depends_on:
      - pihole1  # Startet erst nach pihole1
      - pihole2  # Startet erst nach pihole2
    restart: unless-stopped  # Neustart bei Fehlern

  # NGINX als Reverse Proxy oder Webserver
  nginx:
    container_name: nginx  # Name des Containers
    image: nginx:latest  # Aktuelles NGINX Image
    networks:
      dns_network:
        ipv4_address: 10.0.1.5  # Feste IP-Adresse für NGINX
    ports:
      - "8085:80"  # Zugriff auf NGINX über Port 8085
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"  # Persistente Konfiguration für NGINX
    depends_on:
      - pihole1  # Startet erst nach pihole1
      - pihole2  # Startet erst nach pihole2
    restart: unless-stopped  # Neustart bei Fehlern

# Netzwerk-Konfiguration
networks:
  dns_network:
    driver: bridge  # Benutzerdefiniertes Netzwerk mit Bridge-Treiber
    ipam:
      config:
        - subnet: "10.0.1.0/24"  # Subnetz für alle Container im DNS-Netzwerk
